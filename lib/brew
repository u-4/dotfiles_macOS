#!/bin/bash
run_brew() {
  if has "brew"; then
    echo "$(tput setaf 2)Already installed Homebrew ✔︎$(tput sgr0)"
  else
    echo "Installing Homebrew..."
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if has "brew"; then
    echo "Updating Homebrew..."
    brew update && brew upgrade
    [[ $? ]] && echo "$(tput setaf 2)Update Homebrew complete. ✔︎$(tput sgr0)"

    brew tap 'caskroom/cask'
    brew tap 'homebrew/apache'
    brew tap 'homebrew/dupes'
    brew tap 'sanemat/font'
    brew tap 'peco/peco'
    brew tap 'rcmdnk/file'

    local list_formulae
    local -a missing_formulae
    local -a desired_formulae=(
      'autoconf'
      'automake'
      'awscli'
      'android-sdk'
      'asciinema'
      'bash-completion'
      'bash'
      'brew-cask'
      'brew-file'
      'coreutils'
      'ctags'
      'docker'
      'ffmpeg --with-faac --with-fdk-aac --with-ffplay --with-fontconfig --with-freetype --with-frei0r --with-libass --with-libbluray --with-libcaca --with-libquvi --with-libsoxr --with-libvidstab --with-libvorbis --with-libvpx --with-opencore-amr --with-openjpeg --with-openssl --with-opus --with-rtmpdump --with-speex --with-theora --with-tools --with-x265'
      'fontforge'
      'gcc'
      'git'
      'go'
      'httpd22'
      'imagemagick'
      'jq'
      'lua'
      'mysql'
      'nkf'
      'neovim/neovim/neovim'
      'nodebrew'
      'openssl'
      'peco'
      'postgresql'
      'pyenv'
      'pyenv-virtualenv'
      'qt'
      'ruby-build'
      'rbenv'
      'ricty --vim-powerline'
      's3cmd'
      'sqlite'
      'the_platinum_searcher'
      'tmux'
      'tree'
      'wget'
      'zsh'
      'vim --with-lua'
    )

    local installed=`brew list`

    for index in ${!desired_formulae[*]}
    do
      local formula=`echo ${desired_formulae[$index]} | cut -d' ' -f 1`
      if [[ -z `echo "${installed}" | grep "^${formula}$"` ]]; then
        missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
      else
        echo "Installed ${formula}"
        [[ "${formula}" = "ricty" ]] && local installed_ricty=true
      fi
    done

    if [[ "$missing_formulae" ]]; then
      list_formulae=$( printf "%s " "${missing_formulae[@]}" )

      echo "Installing missing Homebrew formulae..."
      brew install $list_formulae

      [[ $? ]] && echo "$(tput setaf 2)Installed missing formulae ✔︎$(tput sgr0)"
    fi

    ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents
    launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
    if [ -z "${installed_ricty}"  ]; then
      echo "Reload fonts. This could take a while..."
      local cellar=`brew --config | grep 'HOMEBREW_CELLAR' | cut -d' ' -f 2`
      find ${cellar}/ricty/*/share/fonts/Ricty*.ttf | xargs -I % cp % ~/Library/Fonts
      fc-cache -vf
    fi

    local -a missing_formulae=()
    local -a desired_formulae=(
      'alfred'
      'coteditor'
      'dash'
      'dropbox'
      'google-chrome'
      'google-drive'
      'google-japanese-ime'
      'google-photos-backup'
      'google-play-music-desktop-player'
      'skitch'
      'skype'
      'slack'
      'the-unarchiver'
      'virtualbox'
      'vlc'
      'xquartz'
    )
    # cask
    local installed=`brew cask list`

    for index in ${!desired_formulae[*]}
    do
      local formula=`echo ${desired_formulae[$index]} | cut -d' ' -f 1`
      if [[ -z `echo "${installed}" | grep "^${formula}$"` ]]; then
        missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
      else
        echo "Installed ${formula}"
      fi
    done

    if [[ "$missing_formulae" ]]; then
      list_formulae=$( printf "%s " "${missing_formulae[@]}" )

      echo "Installing missing Homebrew formulae..."
      brew cask install $list_formulae

      [[ $? ]] && echo "$(tput setaf 2)Installed missing formulae ✔︎$(tput sgr0)"
    fi

    echo "Cleanup Homebrew..."
    brew cleanup
    echo "$(tput setaf 2)Cleanup Homebrew complete. ✔︎$(tput sgr0)"
  fi
}
